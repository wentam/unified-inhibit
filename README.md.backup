# unified-inhibit

Linux wakelocks/inhibitors are a fragmented nightmare.

If you're a user, you pretty much need to be running gnome or KDE for them to work correctly. If
you're an application developer, you need to support a long list of inhibitor mechanisms to get
things working reliably everywhere. It's painful for everyone.

This is the bad kind of fragmentation: These aren't unique, different approaches to solving a given
problem with different pros and cons. This is a bunch of standards doing the same thing in almost
the exact same way. We're just trying to set and track a few boolean values. That's it.

unified-inhibit (uinhibitd) listens on as many inhibitor interfaces as possible and forwards all
inhibit events to all interfaces. If an app inhibits the screensaver via org.gnome.ScreenSaver,
we will also forward that event to org.freedesktop.ScreenSaver (and all of the other inhibitors
that accept a screensaver inhibit event).

This means all interfaces effectively share the same state. Use any interface of you're choosing,
you'll get all of the events.

## Currently supported inhibitors
* org.freedesktop.login1
* org.freedesktop.ScreenSaver
* org.freedesktop.PowerManager
* org.gnome.SessionManager
* org.gnome.ScreenSaver
* org.cinnamon.ScreenSaver
* Linux kernel wakelock

More are out there. Please open issues for missing interfaces!

# D-Bus inhibitors

D-Bus inhibitors will implement their interface when nobody else is implementing the interface.

When another application has an interface implemented, we will eavesdrop via D-Bus
[BecomeMonitor](https://dbus.freedesktop.org/doc/dbus-specification.html#bus-messages-become-monitor).

# setuid

Linux kernel wakelocks and org.freedesktop.login1 unfortunately will probably both require that
uinhibitd has setuid:

```shell
$ chown root uinhibitd
$ chmod 4755 uinhibitd
```

# org.freedesktop.login1 (systemd inhibit)

Because this interface resides on the system bus, it requires special consideration.

In monitoring mode (on a systemd system), uinhibitd probably requires the setuid bit to gain access.

In implementation mode (on a non-systemd system), uinhibitd needs to have permission to claim the
name org.freedesktop.login1 on the system bus. What is needed here depends on your existing
configuration. I've accomplished this on my system by giving uinhibitd setuid and adding the
following D-Bus rules in /etc/dbus-1/system.d/root-can-own-things.conf:

```xml
<busconfig>
  <policy user="root">
    <allow own="*"/>
    <allow send_type="*"/>
  </policy>
</busconfig>
```
